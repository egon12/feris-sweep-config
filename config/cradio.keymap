// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <80>;
            bindings = <&kp>, <&kp>;
        };

        tdcolon: tdcolon {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCOLON";
            #binding-cells = <0>;
            bindings = <&kp I>, <&kp COLON>;

            tapping-term-ms = <200>;
        };

        tdtab: tdtab {
            compatible = "zmk,behavior-tap-dance";
            label = "TDTAB";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp TAB>;
        };

        tdshfshf: tdshfshf {
            compatible = "zmk,behavior-tap-dance";
            label = "TDSHFSHF";
            #binding-cells = <0>;
            bindings = <&ht LSHFT Z>, <&shfshf>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <5>;
        };
    };

    macros {
        shfshf: shfshf {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp LEFT_SHIFT>;
            label = "SHFSHF";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp Q      &kp W  &kp E  &kp R         &kp T          &kp Y        &kp U       &tdcolon         &kp O         &kp P
  &tdtab     &kp S  &kp D  &kp F         &kp G          &kp H        &kp J       &kp K            &kp L         &kp SQT
  &tdshfshf  &kp X  &kp C  &ht LCTRL V   &ht LALT B     &ht GLOBE N  &ht RGUI M  &ht RCTRL COMMA  &ht RALT DOT  &ht RSHFT FSLH
                           &mt LGUI ESC  &lt 2 ENTER    &lt 1 SPACE  &lt 4 BSPC
            >;
        };

        space_layer {
            bindings = <
  &kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &trans     &kp BSPC
  &kp LPAR   &kp RPAR  &kp LBRC  &kp RBRC  &kp TAB      &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &kp COLON
  &kp TILDE  &kp BSLH  &kp PIPE  &trans    &trans       &kp UNDER  &kp PLUS   &trans     &kp GRAVE  &kp SEMI
                                 &trans    &trans       &trans     &trans
            >;
        };

        enter_layer {
            bindings = <
  &trans       &kp N1  &kp N2  &kp N3  &sl 2      &trans  &kp F1  &kp F2  &kp F3  &kp N0
  &caps_word   &kp N4  &kp N5  &kp N6  &kp TAB    &trans  &kp F4  &kp F5  &kp F6  &kp COLON
  &key_repeat  &kp N7  &kp N8  &kp N9  &kp N0     &trans  &kp F7  &kp F8  &kp F9  &kp SEMI
                               &trans  &trans     &trans  &trans
            >;
        };

        esc_layer {
            bindings = <
  &trans      &trans    &trans     &trans    &trans     &trans  &trans  &trans  &trans  &trans
  &kp LPAR    &kp RPAR  &kp LBRC   &kp RBRC  &kp TAB    &trans  &trans  &trans  &trans  &trans
  &sk LSHIFT  &kt LALT  &kt LCTRL  &kt LGUI  &trans     &trans  &trans  &trans  &trans  &trans
                                   &trans    &trans     &trans  &trans
            >;
        };

        backspace_layer {
            bindings = <
  &to 0   &to 1   &to 2   &to 3   &to 4     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp BSPC
  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp COLON
  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans     &trans     &kp SEMI
                          &trans  &trans    &trans    &trans
            >;
        };

        config_layer {
            bindings = <
  &sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
  &bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
  &trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                               &trans      &trans          &trans  &trans
            >;
        };
    };
};
