// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <80>;
            bindings = <&kp>, <&kp>;
        };

        tdcolon: tdcolon {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCOLON";
            #binding-cells = <0>;
            bindings = <&kp I>, <&kp COLON>;

            tapping-term-ms = <200>;
        };

        tdshfshf: tdshfshf {
            compatible = "zmk,behavior-tap-dance";
            label = "TDSHFSHF";
            #binding-cells = <0>;
            bindings = <&ht LSHFT Z>, <&shfshf>;
        };

        tdctrctr: tdctrctr {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCTRCTR";
            #binding-cells = <0>;
            bindings = <&ht LEFT_ALT V>, <&ctrctr>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 1>;
            then-layer = <4>;
        };
    };

    macros {
        shfshf: shfshf {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp LEFT_SHIFT>;
            label = "SHFSHF";
        };

        ctrctr: ctrctr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LCTRL>;
            label = "CTRCTR";
        };
    };

    combos {
        compatible = "zmk,combos";

        mo1 {
            bindings = <&mo 1>;
            key-positions = <30 31>;
        };

        tofive {
            bindings = <&to 5>;
            key-positions = <20 21 22 23>;
        };

        tozero {
            bindings = <&to 0>;
            key-positions = <20 21 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp Q      &kp W  &kp E  &kp R          &kp T             &kp Y        &kp U       &tdcolon             &kp O                  &kp P
  &kp A      &kp S  &kp D  &kp F          &kp G             &kp H        &kp J       &kp K                &kp L                  &kp SQT
  &tdshfshf  &kp X  &kp C  &tdctrctr      &kp B             &ht GLOBE N  &ht RGUI M  &ht RIGHT_ALT COMMA  &ht RIGHT_CONTROL DOT  &ht RSHFT FSLH
                           &mt LCTRL ESC  &mt LGUI ENTER    &lt 2 SPACE  &lt 3 BSPC
            >;
        };

        ctrl_cmd_layer {
            bindings = <
  &trans    &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans       &kp C_AL_IM   &kp F1  &kp F2  &kp F3  &trans
  &kp CLCK  &kp KP_N4  &kp KP_N5  &kp KP_N6  &trans       &kp C_AL_WWW  &kp F4  &kp F5  &kp F6  &trans
  &trans    &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_N0    &kp C_AL_DB   &kp F7  &kp F8  &kp F9  &trans
                                  &trans     &trans       &trans        &trans
            >;
        };

        space_layer {
            bindings = <
  &kp EXCL   &kp AT    &kp HASH  &kp DLLR    &kp PRCNT     &kp CARET  &kp AMPS   &kp ASTRK  &kp DELETE  &kp BSPC
  &kp LPAR   &kp RPAR  &kp LBRC  &kp RBRC    &kp TAB       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT    &kp DQT
  &kp TILDE  &kp BSLH  &kp PIPE  &kp C_PREV  &kp C_NEXT    &kp UNDER  &kp PLUS   &trans     &kp GRAVE   &kp SEMI
                                 &trans      &trans        &trans     &trans
            >;
        };

        backspace_layer {
            bindings = <
  &trans       &kp N1  &kp N2  &kp N3  &kp C_PP    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp BSPC
  &caps_word   &kp N4  &kp N5  &kp N6  &kp DOT     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp COLON
  &key_repeat  &kp N7  &kp N8  &kp N9  &kp N0      &trans    &trans     &trans     &trans     &kp SEMI
                               &trans  &trans      &trans    &trans
            >;
        };

        config_layer {
            bindings = <
  &sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
  &bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
  &trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                               &trans      &trans          &trans  &trans
            >;
        };

        arrow_on_left {
            bindings = <
  &trans  &trans    &kp UP    &trans     &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans    &trans    &trans     &trans    &trans  &trans  &trans  &trans  &trans
                              &trans     &trans    &trans  &trans
            >;
        };
    };
};
